From 2dc1e5f8127c0582aae898b9a6b3a2dc4617f49b Mon Sep 17 00:00:00 2001
From: Michael Hudson-Doyle <michael.hudson@canonical.com>
Date: Thu, 5 Apr 2018 10:07:41 +1200
Subject: [PATCH] cmd/link: do not pass -no-pie to host linker when -linkshared
 is passed

As the comment above the code I'm changing, when building with -buildmode=exe,
the default compiler flags produce code incompatible with PIE. But when
-linkshared is passed, the default compiler flags are not used so this does not
apply. And now I've found a system (linux/arm64 with glibc 2.27) where this
combination of flags causes a problem, albeit for reasons I don't really
understand, so stop passing -no-pie when -linkshared is passed.

Change-Id: I412ec7941dc0cb89e6d1b171fc29288aadcb9f20
---
 src/cmd/link/internal/ld/lib.go | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

--- a/src/cmd/link/internal/ld/lib.go
+++ b/src/cmd/link/internal/ld/lib.go
@@ -1265,7 +1265,7 @@
 	// does not work, the resulting programs will not run. See
 	// issue #17847. To avoid this problem pass -no-pie to the
 	// toolchain if it is supported.
-	if ctxt.BuildMode == BuildModeExe {
+	if ctxt.BuildMode == BuildModeExe && !ctxt.linkShared {
 		src := filepath.Join(*flagTmpdir, "trivial.c")
 		if err := ioutil.WriteFile(src, []byte("int main() { return 0; }"), 0666); err != nil {
 			Errorf(nil, "WriteFile trivial.c failed: %v", err)
